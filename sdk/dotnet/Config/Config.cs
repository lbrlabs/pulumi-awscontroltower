// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Lbrlabs.PulumiPackage.Awscontroltower
{
    public static class Config
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly Pulumi.Config __config = new Pulumi.Config("awscontroltower");

        private static readonly __Value<string?> _accessKey = new __Value<string?>(() => __config.Get("accessKey"));
        /// <summary>
        /// This is the AWS access key. It must be provided, but it can also be sourced from the `AWS_ACCESS_KEY_ID` environment
        /// variable, or via a shared credentials file if `profile` is specified.
        /// </summary>
        public static string? AccessKey
        {
            get => _accessKey.Get();
            set => _accessKey.Set(value);
        }

        private static readonly __Value<Lbrlabs.PulumiPackage.Awscontroltower.Config.Types.AssumeRole?> _assumeRole = new __Value<Lbrlabs.PulumiPackage.Awscontroltower.Config.Types.AssumeRole?>(() => __config.GetObject<Lbrlabs.PulumiPackage.Awscontroltower.Config.Types.AssumeRole>("assumeRole"));
        /// <summary>
        /// Settings for making use of the AWS Assume Role functionality.
        /// </summary>
        public static Lbrlabs.PulumiPackage.Awscontroltower.Config.Types.AssumeRole? AssumeRole
        {
            get => _assumeRole.Get();
            set => _assumeRole.Set(value);
        }

        private static readonly __Value<int?> _maxRetries = new __Value<int?>(() => __config.GetInt32("maxRetries"));
        /// <summary>
        /// This is the maximum number of times an API call is retried, in the case where requests are being throttled or
        /// experiencing transient failures. The delay between the subsequent API calls increases exponentially. If omitted, the
        /// default value is `25`.
        /// </summary>
        public static int? MaxRetries
        {
            get => _maxRetries.Get();
            set => _maxRetries.Set(value);
        }

        private static readonly __Value<string?> _profile = new __Value<string?>(() => __config.Get("profile"));
        /// <summary>
        /// This is the AWS profile name as set in the shared credentials file.
        /// </summary>
        public static string? Profile
        {
            get => _profile.Get();
            set => _profile.Set(value);
        }

        private static readonly __Value<string?> _region = new __Value<string?>(() => __config.Get("region"));
        /// <summary>
        /// This is the AWS region. It must be provided, but it can also be sourced from the `AWS_DEFAULT_REGION` environment
        /// variables, or via a shared credentials file if `profile` is specified.
        /// </summary>
        public static string? Region
        {
            get => _region.Get();
            set => _region.Set(value);
        }

        private static readonly __Value<string?> _secretKey = new __Value<string?>(() => __config.Get("secretKey"));
        /// <summary>
        /// This is the AWS secret key. It must be provided, but it can also be sourced from the `AWS_SECRET_ACCESS_KEY` environment
        /// variable, or via a shared credentials file if `profile` is specified.
        /// </summary>
        public static string? SecretKey
        {
            get => _secretKey.Get();
            set => _secretKey.Set(value);
        }

        private static readonly __Value<string?> _sharedCredentialsFile = new __Value<string?>(() => __config.Get("sharedCredentialsFile"));
        /// <summary>
        /// This is the path to the shared credentials file. If this is not set and a profile is specified, `~/.aws/credentials`
        /// will be used.
        /// </summary>
        public static string? SharedCredentialsFile
        {
            get => _sharedCredentialsFile.Get();
            set => _sharedCredentialsFile.Set(value);
        }

        private static readonly __Value<bool?> _skipCredentialsValidation = new __Value<bool?>(() => __config.GetBoolean("skipCredentialsValidation"));
        /// <summary>
        /// Skip the credentials validation via the STS API. Useful for AWS API implementations that do not have STS available or
        /// implemented.
        /// </summary>
        public static bool? SkipCredentialsValidation
        {
            get => _skipCredentialsValidation.Get();
            set => _skipCredentialsValidation.Set(value);
        }

        private static readonly __Value<bool?> _skipMetadataApiCheck = new __Value<bool?>(() => __config.GetBoolean("skipMetadataApiCheck"));
        /// <summary>
        /// Skip the AWS Metadata API check. Useful for AWS API implementations that do not have a metadata API endpoint. Setting to
        /// `true` prevents Terraform from authenticating via the Metadata API. You may need to use other authentication methods
        /// like static credentials, configuration variables, or environment variables.
        /// </summary>
        public static bool? SkipMetadataApiCheck
        {
            get => _skipMetadataApiCheck.Get();
            set => _skipMetadataApiCheck.Set(value);
        }

        private static readonly __Value<bool?> _skipRequestingAccountId = new __Value<bool?>(() => __config.GetBoolean("skipRequestingAccountId"));
        /// <summary>
        /// Skip requesting the account ID. Useful for AWS API implementations that do not have the IAM, STS API, or metadata API.
        /// </summary>
        public static bool? SkipRequestingAccountId
        {
            get => _skipRequestingAccountId.Get();
            set => _skipRequestingAccountId.Set(value);
        }

        private static readonly __Value<string?> _token = new __Value<string?>(() => __config.Get("token"));
        /// <summary>
        /// Session token for validating temporary credentials. Typically provided after successful identity federation or
        /// Multi-Factor Authentication (MFA) login. With MFA login, this is the session token provided afterward, not the 6 digit
        /// MFA code used to get temporary credentials. It can also be sourced from the `AWS_SESSION_TOKEN` environment variable.
        /// </summary>
        public static string? Token
        {
            get => _token.Get();
            set => _token.Set(value);
        }

        public static class Types
        {

             public class AssumeRole
             {
                public int? DurationSeconds { get; set; }
                public string? ExternalId { get; set; } = null!;
                public string? Policy { get; set; } = null!;
                public ImmutableArray<string> PolicyArns { get; set; }
                public string? RoleArn { get; set; } = null!;
                public string? SessionName { get; set; } = null!;
                public ImmutableDictionary<string, string>? Tags { get; set; } = null!;
                public ImmutableArray<string> TransitiveTagKeys { get; set; }
            }
        }
    }
}
