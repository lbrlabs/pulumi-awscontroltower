// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/lbrlabs/pulumi-awscontroltower/sdk/go/awscontroltower/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

var _ = internal.GetEnvOrDefault

// This is the AWS access key. It must be provided, but it can also be sourced from the `AWS_ACCESS_KEY_ID` environment
// variable, or via a shared credentials file if `profile` is specified.
func GetAccessKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "awscontroltower:accessKey")
}

// Settings for making use of the AWS Assume Role functionality.
func GetAssumeRole(ctx *pulumi.Context) string {
	return config.Get(ctx, "awscontroltower:assumeRole")
}

// This is the maximum number of times an API call is retried, in the case where requests are being throttled or
// experiencing transient failures. The delay between the subsequent API calls increases exponentially. If omitted, the
// default value is `25`.
func GetMaxRetries(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "awscontroltower:maxRetries")
}

// This is the AWS profile name as set in the shared credentials file.
func GetProfile(ctx *pulumi.Context) string {
	return config.Get(ctx, "awscontroltower:profile")
}

// This is the AWS region. It must be provided, but it can also be sourced from the `AWS_DEFAULT_REGION` environment
// variables, or via a shared credentials file if `profile` is specified.
func GetRegion(ctx *pulumi.Context) string {
	return config.Get(ctx, "awscontroltower:region")
}

// This is the AWS secret key. It must be provided, but it can also be sourced from the `AWS_SECRET_ACCESS_KEY` environment
// variable, or via a shared credentials file if `profile` is specified.
func GetSecretKey(ctx *pulumi.Context) string {
	return config.Get(ctx, "awscontroltower:secretKey")
}

// This is the path to the shared credentials file. If this is not set and a profile is specified, `~/.aws/credentials`
// will be used.
func GetSharedCredentialsFile(ctx *pulumi.Context) string {
	return config.Get(ctx, "awscontroltower:sharedCredentialsFile")
}

// Skip the credentials validation via the STS API. Useful for AWS API implementations that do not have STS available or
// implemented.
func GetSkipCredentialsValidation(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "awscontroltower:skipCredentialsValidation")
}

// Skip the AWS Metadata API check. Useful for AWS API implementations that do not have a metadata API endpoint. Setting to
// `true` prevents Terraform from authenticating via the Metadata API. You may need to use other authentication methods
// like static credentials, configuration variables, or environment variables.
func GetSkipMetadataApiCheck(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "awscontroltower:skipMetadataApiCheck")
}

// Skip requesting the account ID. Useful for AWS API implementations that do not have the IAM, STS API, or metadata API.
func GetSkipRequestingAccountId(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "awscontroltower:skipRequestingAccountId")
}

// Session token for validating temporary credentials. Typically provided after successful identity federation or
// Multi-Factor Authentication (MFA) login. With MFA login, this is the session token provided afterward, not the 6 digit
// MFA code used to get temporary credentials. It can also be sourced from the `AWS_SESSION_TOKEN` environment variable.
func GetToken(ctx *pulumi.Context) string {
	return config.Get(ctx, "awscontroltower:token")
}
