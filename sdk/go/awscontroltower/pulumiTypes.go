// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package awscontroltower

import (
	"context"
	"reflect"

	"github.com/lbrlabs/pulumi-awscontroltower/sdk/go/awscontroltower/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ProviderAssumeRole struct {
	DurationSeconds   *int              `pulumi:"durationSeconds"`
	ExternalId        *string           `pulumi:"externalId"`
	Policy            *string           `pulumi:"policy"`
	PolicyArns        []string          `pulumi:"policyArns"`
	RoleArn           *string           `pulumi:"roleArn"`
	SessionName       *string           `pulumi:"sessionName"`
	Tags              map[string]string `pulumi:"tags"`
	TransitiveTagKeys []string          `pulumi:"transitiveTagKeys"`
}

// ProviderAssumeRoleInput is an input type that accepts ProviderAssumeRoleArgs and ProviderAssumeRoleOutput values.
// You can construct a concrete instance of `ProviderAssumeRoleInput` via:
//
//	ProviderAssumeRoleArgs{...}
type ProviderAssumeRoleInput interface {
	pulumi.Input

	ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput
	ToProviderAssumeRoleOutputWithContext(context.Context) ProviderAssumeRoleOutput
}

type ProviderAssumeRoleArgs struct {
	DurationSeconds   pulumi.IntPtrInput      `pulumi:"durationSeconds"`
	ExternalId        pulumi.StringPtrInput   `pulumi:"externalId"`
	Policy            pulumi.StringPtrInput   `pulumi:"policy"`
	PolicyArns        pulumi.StringArrayInput `pulumi:"policyArns"`
	RoleArn           pulumi.StringPtrInput   `pulumi:"roleArn"`
	SessionName       pulumi.StringPtrInput   `pulumi:"sessionName"`
	Tags              pulumi.StringMapInput   `pulumi:"tags"`
	TransitiveTagKeys pulumi.StringArrayInput `pulumi:"transitiveTagKeys"`
}

func (ProviderAssumeRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return i.ToProviderAssumeRoleOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput)
}

func (i ProviderAssumeRoleArgs) ToOutput(ctx context.Context) pulumix.Output[ProviderAssumeRole] {
	return pulumix.Output[ProviderAssumeRole]{
		OutputState: i.ToProviderAssumeRoleOutputWithContext(ctx).OutputState,
	}
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i ProviderAssumeRoleArgs) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRoleOutput).ToProviderAssumeRolePtrOutputWithContext(ctx)
}

// ProviderAssumeRolePtrInput is an input type that accepts ProviderAssumeRoleArgs, ProviderAssumeRolePtr and ProviderAssumeRolePtrOutput values.
// You can construct a concrete instance of `ProviderAssumeRolePtrInput` via:
//
//	        ProviderAssumeRoleArgs{...}
//
//	or:
//
//	        nil
type ProviderAssumeRolePtrInput interface {
	pulumi.Input

	ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput
	ToProviderAssumeRolePtrOutputWithContext(context.Context) ProviderAssumeRolePtrOutput
}

type providerAssumeRolePtrType ProviderAssumeRoleArgs

func ProviderAssumeRolePtr(v *ProviderAssumeRoleArgs) ProviderAssumeRolePtrInput {
	return (*providerAssumeRolePtrType)(v)
}

func (*providerAssumeRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return i.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (i *providerAssumeRolePtrType) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderAssumeRolePtrOutput)
}

func (i *providerAssumeRolePtrType) ToOutput(ctx context.Context) pulumix.Output[*ProviderAssumeRole] {
	return pulumix.Output[*ProviderAssumeRole]{
		OutputState: i.ToProviderAssumeRolePtrOutputWithContext(ctx).OutputState,
	}
}

type ProviderAssumeRoleOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutput() ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRoleOutputWithContext(ctx context.Context) ProviderAssumeRoleOutput {
	return o
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o.ToProviderAssumeRolePtrOutputWithContext(context.Background())
}

func (o ProviderAssumeRoleOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderAssumeRole) *ProviderAssumeRole {
		return &v
	}).(ProviderAssumeRolePtrOutput)
}

func (o ProviderAssumeRoleOutput) ToOutput(ctx context.Context) pulumix.Output[ProviderAssumeRole] {
	return pulumix.Output[ProviderAssumeRole]{
		OutputState: o.OutputState,
	}
}

func (o ProviderAssumeRoleOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o ProviderAssumeRoleOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) PolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderAssumeRole) []string { return v.PolicyArns }).(pulumi.StringArrayOutput)
}

func (o ProviderAssumeRoleOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderAssumeRole) *string { return v.SessionName }).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRoleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ProviderAssumeRole) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ProviderAssumeRoleOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderAssumeRole) []string { return v.TransitiveTagKeys }).(pulumi.StringArrayOutput)
}

type ProviderAssumeRolePtrOutput struct{ *pulumi.OutputState }

func (ProviderAssumeRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderAssumeRole)(nil)).Elem()
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutput() ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) ToProviderAssumeRolePtrOutputWithContext(ctx context.Context) ProviderAssumeRolePtrOutput {
	return o
}

func (o ProviderAssumeRolePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ProviderAssumeRole] {
	return pulumix.Output[*ProviderAssumeRole]{
		OutputState: o.OutputState,
	}
}

func (o ProviderAssumeRolePtrOutput) Elem() ProviderAssumeRoleOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) ProviderAssumeRole {
		if v != nil {
			return *v
		}
		var ret ProviderAssumeRole
		return ret
	}).(ProviderAssumeRoleOutput)
}

func (o ProviderAssumeRolePtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) PolicyArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) []string {
		if v == nil {
			return nil
		}
		return v.PolicyArns
	}).(pulumi.StringArrayOutput)
}

func (o ProviderAssumeRolePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) SessionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) *string {
		if v == nil {
			return nil
		}
		return v.SessionName
	}).(pulumi.StringPtrOutput)
}

func (o ProviderAssumeRolePtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

func (o ProviderAssumeRolePtrOutput) TransitiveTagKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderAssumeRole) []string {
		if v == nil {
			return nil
		}
		return v.TransitiveTagKeys
	}).(pulumi.StringArrayOutput)
}

type ControlTowerAwsAccountSso struct {
	Email     string `pulumi:"email"`
	FirstName string `pulumi:"firstName"`
	LastName  string `pulumi:"lastName"`
}

// ControlTowerAwsAccountSsoInput is an input type that accepts ControlTowerAwsAccountSsoArgs and ControlTowerAwsAccountSsoOutput values.
// You can construct a concrete instance of `ControlTowerAwsAccountSsoInput` via:
//
//	ControlTowerAwsAccountSsoArgs{...}
type ControlTowerAwsAccountSsoInput interface {
	pulumi.Input

	ToControlTowerAwsAccountSsoOutput() ControlTowerAwsAccountSsoOutput
	ToControlTowerAwsAccountSsoOutputWithContext(context.Context) ControlTowerAwsAccountSsoOutput
}

type ControlTowerAwsAccountSsoArgs struct {
	Email     pulumi.StringInput `pulumi:"email"`
	FirstName pulumi.StringInput `pulumi:"firstName"`
	LastName  pulumi.StringInput `pulumi:"lastName"`
}

func (ControlTowerAwsAccountSsoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlTowerAwsAccountSso)(nil)).Elem()
}

func (i ControlTowerAwsAccountSsoArgs) ToControlTowerAwsAccountSsoOutput() ControlTowerAwsAccountSsoOutput {
	return i.ToControlTowerAwsAccountSsoOutputWithContext(context.Background())
}

func (i ControlTowerAwsAccountSsoArgs) ToControlTowerAwsAccountSsoOutputWithContext(ctx context.Context) ControlTowerAwsAccountSsoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlTowerAwsAccountSsoOutput)
}

func (i ControlTowerAwsAccountSsoArgs) ToOutput(ctx context.Context) pulumix.Output[ControlTowerAwsAccountSso] {
	return pulumix.Output[ControlTowerAwsAccountSso]{
		OutputState: i.ToControlTowerAwsAccountSsoOutputWithContext(ctx).OutputState,
	}
}

func (i ControlTowerAwsAccountSsoArgs) ToControlTowerAwsAccountSsoPtrOutput() ControlTowerAwsAccountSsoPtrOutput {
	return i.ToControlTowerAwsAccountSsoPtrOutputWithContext(context.Background())
}

func (i ControlTowerAwsAccountSsoArgs) ToControlTowerAwsAccountSsoPtrOutputWithContext(ctx context.Context) ControlTowerAwsAccountSsoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlTowerAwsAccountSsoOutput).ToControlTowerAwsAccountSsoPtrOutputWithContext(ctx)
}

// ControlTowerAwsAccountSsoPtrInput is an input type that accepts ControlTowerAwsAccountSsoArgs, ControlTowerAwsAccountSsoPtr and ControlTowerAwsAccountSsoPtrOutput values.
// You can construct a concrete instance of `ControlTowerAwsAccountSsoPtrInput` via:
//
//	        ControlTowerAwsAccountSsoArgs{...}
//
//	or:
//
//	        nil
type ControlTowerAwsAccountSsoPtrInput interface {
	pulumi.Input

	ToControlTowerAwsAccountSsoPtrOutput() ControlTowerAwsAccountSsoPtrOutput
	ToControlTowerAwsAccountSsoPtrOutputWithContext(context.Context) ControlTowerAwsAccountSsoPtrOutput
}

type controlTowerAwsAccountSsoPtrType ControlTowerAwsAccountSsoArgs

func ControlTowerAwsAccountSsoPtr(v *ControlTowerAwsAccountSsoArgs) ControlTowerAwsAccountSsoPtrInput {
	return (*controlTowerAwsAccountSsoPtrType)(v)
}

func (*controlTowerAwsAccountSsoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlTowerAwsAccountSso)(nil)).Elem()
}

func (i *controlTowerAwsAccountSsoPtrType) ToControlTowerAwsAccountSsoPtrOutput() ControlTowerAwsAccountSsoPtrOutput {
	return i.ToControlTowerAwsAccountSsoPtrOutputWithContext(context.Background())
}

func (i *controlTowerAwsAccountSsoPtrType) ToControlTowerAwsAccountSsoPtrOutputWithContext(ctx context.Context) ControlTowerAwsAccountSsoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ControlTowerAwsAccountSsoPtrOutput)
}

func (i *controlTowerAwsAccountSsoPtrType) ToOutput(ctx context.Context) pulumix.Output[*ControlTowerAwsAccountSso] {
	return pulumix.Output[*ControlTowerAwsAccountSso]{
		OutputState: i.ToControlTowerAwsAccountSsoPtrOutputWithContext(ctx).OutputState,
	}
}

type ControlTowerAwsAccountSsoOutput struct{ *pulumi.OutputState }

func (ControlTowerAwsAccountSsoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ControlTowerAwsAccountSso)(nil)).Elem()
}

func (o ControlTowerAwsAccountSsoOutput) ToControlTowerAwsAccountSsoOutput() ControlTowerAwsAccountSsoOutput {
	return o
}

func (o ControlTowerAwsAccountSsoOutput) ToControlTowerAwsAccountSsoOutputWithContext(ctx context.Context) ControlTowerAwsAccountSsoOutput {
	return o
}

func (o ControlTowerAwsAccountSsoOutput) ToControlTowerAwsAccountSsoPtrOutput() ControlTowerAwsAccountSsoPtrOutput {
	return o.ToControlTowerAwsAccountSsoPtrOutputWithContext(context.Background())
}

func (o ControlTowerAwsAccountSsoOutput) ToControlTowerAwsAccountSsoPtrOutputWithContext(ctx context.Context) ControlTowerAwsAccountSsoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ControlTowerAwsAccountSso) *ControlTowerAwsAccountSso {
		return &v
	}).(ControlTowerAwsAccountSsoPtrOutput)
}

func (o ControlTowerAwsAccountSsoOutput) ToOutput(ctx context.Context) pulumix.Output[ControlTowerAwsAccountSso] {
	return pulumix.Output[ControlTowerAwsAccountSso]{
		OutputState: o.OutputState,
	}
}

func (o ControlTowerAwsAccountSsoOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v ControlTowerAwsAccountSso) string { return v.Email }).(pulumi.StringOutput)
}

func (o ControlTowerAwsAccountSsoOutput) FirstName() pulumi.StringOutput {
	return o.ApplyT(func(v ControlTowerAwsAccountSso) string { return v.FirstName }).(pulumi.StringOutput)
}

func (o ControlTowerAwsAccountSsoOutput) LastName() pulumi.StringOutput {
	return o.ApplyT(func(v ControlTowerAwsAccountSso) string { return v.LastName }).(pulumi.StringOutput)
}

type ControlTowerAwsAccountSsoPtrOutput struct{ *pulumi.OutputState }

func (ControlTowerAwsAccountSsoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ControlTowerAwsAccountSso)(nil)).Elem()
}

func (o ControlTowerAwsAccountSsoPtrOutput) ToControlTowerAwsAccountSsoPtrOutput() ControlTowerAwsAccountSsoPtrOutput {
	return o
}

func (o ControlTowerAwsAccountSsoPtrOutput) ToControlTowerAwsAccountSsoPtrOutputWithContext(ctx context.Context) ControlTowerAwsAccountSsoPtrOutput {
	return o
}

func (o ControlTowerAwsAccountSsoPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ControlTowerAwsAccountSso] {
	return pulumix.Output[*ControlTowerAwsAccountSso]{
		OutputState: o.OutputState,
	}
}

func (o ControlTowerAwsAccountSsoPtrOutput) Elem() ControlTowerAwsAccountSsoOutput {
	return o.ApplyT(func(v *ControlTowerAwsAccountSso) ControlTowerAwsAccountSso {
		if v != nil {
			return *v
		}
		var ret ControlTowerAwsAccountSso
		return ret
	}).(ControlTowerAwsAccountSsoOutput)
}

func (o ControlTowerAwsAccountSsoPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlTowerAwsAccountSso) *string {
		if v == nil {
			return nil
		}
		return &v.Email
	}).(pulumi.StringPtrOutput)
}

func (o ControlTowerAwsAccountSsoPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlTowerAwsAccountSso) *string {
		if v == nil {
			return nil
		}
		return &v.FirstName
	}).(pulumi.StringPtrOutput)
}

func (o ControlTowerAwsAccountSsoPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ControlTowerAwsAccountSso) *string {
		if v == nil {
			return nil
		}
		return &v.LastName
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRoleInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderAssumeRolePtrInput)(nil)).Elem(), ProviderAssumeRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlTowerAwsAccountSsoInput)(nil)).Elem(), ControlTowerAwsAccountSsoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ControlTowerAwsAccountSsoPtrInput)(nil)).Elem(), ControlTowerAwsAccountSsoArgs{})
	pulumi.RegisterOutputType(ProviderAssumeRoleOutput{})
	pulumi.RegisterOutputType(ProviderAssumeRolePtrOutput{})
	pulumi.RegisterOutputType(ControlTowerAwsAccountSsoOutput{})
	pulumi.RegisterOutputType(ControlTowerAwsAccountSsoPtrOutput{})
}
